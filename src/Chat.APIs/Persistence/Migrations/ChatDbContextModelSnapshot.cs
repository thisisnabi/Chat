// <auto-generated />
using System;
using Chat.APIs.SharedData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chat.APIs.Persistence.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    partial class ChatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Chat.APIs.Models.Domain.Conversation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("Chat.APIs.Models.Domain.Conversation", b =>
                {
                    b.OwnsMany("Chat.APIs.Models.Domain.ConversationUser", "Users", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("ConversationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("JoinedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("UserName")
                                .IsRequired()
                                .HasMaxLength(400)
                                .HasColumnType("nvarchar(400)");

                            b1.HasKey("Id");

                            b1.HasIndex("ConversationId");

                            b1.ToTable("ConversationUser");

                            b1.WithOwner("Conversation")
                                .HasForeignKey("ConversationId");

                            b1.Navigation("Conversation");
                        });

                    b.OwnsMany("Chat.APIs.Models.Domain.Message", "Messages", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Content")
                                .IsRequired()
                                .HasMaxLength(400)
                                .HasColumnType("nvarchar(400)");

                            b1.Property<Guid>("ConversationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Username")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id");

                            b1.HasIndex("ConversationId");

                            b1.ToTable("Message");

                            b1.WithOwner("Conversation")
                                .HasForeignKey("ConversationId");

                            b1.Navigation("Conversation");
                        });

                    b.Navigation("Messages");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
